#! /usr/bin/env node

// - 配置可执行命令 commander
const program = require('commander');
const chalk = require('chalk');
// 核心功能1.创建项目 2.更改配置 3 ui界面 @vue/cli

// 创建命令
program
  .command('create <app-name>')
  .description('create a new project')
  .option('-f, --force', 'overwrite target diectory if it is exist')
  .action((name, cmd) => {
    require('../lib/create')(name, cmd);
  })

// 配置
// vue config --get a
// vue config --set a b
program
  .command('config [value]')
  .description('inspect and modify the config')
  .option('-g, --get <path>', 'get value from option')
  .option('-s, --set <path> <value>', 'set value for option')
  .option('-d, --delete <path>', 'delete option from config')
  .action((value, cmd) => {
    console.log('value', value, cmd);
  })

program
  .command('ui')
  .description('start and open zf-cli ui')
  .option('-p, --port <port>', 'port used for the UI Server')
  .action((cmd) => {
    console.log('cmd', cmd)
  })

program
  .version(`zf-cli@${require('../package.json').version}`)
  .usage(`<command> [option]`);
  
program.on('--help', () => {
  console.log();
  console.log(`Run  ${chalk.cyan('zf-cli <command> --help')} to show details`)
  console.log();
})

// 解析传入的参数
program.parse(process.argv);


// - 我们要实现 脚手架 先做一个命令行交互功能 inquier
// - 将模版下载下来
// - 根据用户的选择动态的生成